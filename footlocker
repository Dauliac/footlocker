#!/usr/bin/env bash

dependencies="i3lock scrot convert"
check_integrity() {
    for requirement in ${dependencies} ; do
        command -v ${requirement} >/dev/null 2>&1 || {
            echo "[ERROR] missing ${requirement}" >&2; 
        exit 1; }

    done
}

lock() {
    #$1 image path
    # letterEnteredColor=d23c3dff
    letterEnteredColor=98971aff
    letterRemovedColor=fabd2fff
    passwordCorrect=00000000
    passwordIncorrect=fb4934ff
    background=00000000
    foreground=ffffffff
    tmp_bg_f='/tmp/i3lock/'
    tmp_bg='lock.png'
    l_img="${tmp_bg_f}${tmp_bg}"
    if [ ! -d $tmp_bg_f ];then
        mkdir "${tmp_bg_f}"
    fi
    scrot "${l_img}"
    convert "${l_img}" -blur "0x4" -fill black -colorize 15% "${l_img}"
    i3lock \
        -t -i "${l_img}" \
        --timepos="110:h-70" \
        --datepos="135:h-45" \
        --clock --datestr "Type password to unlock..." \
        --insidecolor=$background --ringcolor=$foreground --line-uses-inside \
        --keyhlcolor=$letterEnteredColor --bshlcolor=$letterRemovedColor --separatorcolor=$background \
        --insidevercolor=$passwordCorrect --insidewrongcolor=$passwordIncorrect \
        --ringvercolor=$foreground --ringwrongcolor=$foreground --indpos="x+280:h-70" \
        --radius=20 --ring-width=4 --veriftext="" --wrongtext="" \
        --verifcolor="$foreground" --timecolor="$foreground" --datecolor="$foreground" \
        --noinputtext="" \
        --force-clock
}
check_integrity
lock
exit 0
